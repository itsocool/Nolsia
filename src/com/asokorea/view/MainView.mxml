<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:tabs="com.asokorea.view.tabs.*" xmlns:panels="com.asokorea.view.panels.*" currentState="{ model.currentState }" xmlns:throbber="flex.util.ui.throbber.*" xmlns:util="com.asokorea.util.*" xmlns:view="com.asokorea.view.*" >
	<fx:Script>
		<![CDATA[
			
			import com.asokorea.model.enum.Icons;
			import com.asokorea.model.vo.HostVo;
			import com.asokorea.presentation.MainViewPresentationModel;
			
			import mx.collections.IList;
			import mx.events.FlexEvent;

			[Bindable]
			[Inject]
			public var model:MainViewPresentationModel;

			[Bindable]
			public var position:int = 0;
			
			protected function onChange(event:Event):void
			{
				if(chkFixSameLine.selected)
				{
//					position = txtOutput.scroller.verticalScrollBar.value;
				}
			}
			
			protected function txtOutput_valueCommitHandler(event:FlexEvent):void
			{
				if(chkFixSameLine.selected)
				{
//					txtOutput.scroller.verticalScrollBar.value = position;
				}
			}
			
			protected function userCountFunc(item:Object, column:DataGridColumn):String
			{
				var result:String = null;
				
				if(item["userList"] is IList)
				{
					result = IList(item["userList"]).length.toString();
				}
				
				return result; 
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="FIRST" />
		<s:State name="OPEN" />
		<s:State name="BUSY" />
	</s:states>

	<!-- Background Label -->
	<s:Label includeIn="FIRST" fontSize="120" fontWeight="bold" horizontalCenter="0" rotationZ="27"
			 text="{model.appModel.appName} {model.appModel.appVersionLabel}" textAlpha="0.5" verticalCenter="0" />
	
	<!-- Background Label -->

	<!-- Task Pop up  -->
	<view:TaskSetting includeIn="FIRST" dataProvider="{model.appModel.settings}" verticalCenter="0" horizontalCenter="0" />
	<!-- Task Pop up  -->

	<!--main view-->
	<s:BorderContainer includeIn="OPEN,BUSY" id="drushArea" borderWeight="4" cornerRadius="8"
					   left="10" top="10" right="10" bottom="10" enabled.BUSY="false">
		<s:layout>
			<s:VerticalLayout paddingBottom="6" paddingLeft="6" paddingRight="6" paddingTop="6" />
		</s:layout>
		
		<mx:HDividedBox width="100%" height="100%">
			<mx:TabNavigator width="50%" height="100%" paddingBottom="5" paddingLeft="5"
							 paddingRight="5" paddingTop="5">
				<s:NavigatorContent label="Host user check">
					<s:layout>
						<s:VerticalLayout />
					</s:layout>
					<s:HGroup verticalAlign="middle" width="100%">
						<mx:TextInput id="txiHostFile" editable="false" width="100%" toolTip="{txiHostFile.text}" text="{model.appModel.selectedTask.importHostListFile}" />
					</s:HGroup>
					<s:HGroup verticalAlign="middle" width="100%">
						<mx:Button icon="{Icons.DISK}" label="Open" id="btnHostListOpen" click="model.browseHostList()" />
						<mx:Button icon="{Icons.ARROW_REFRESH}" id="btnExecuteLoop" label="Refresh" click="model.loadHostList()" enabled="{!!model.appModel.hostFile}"/>
						<mx:Button icon="{Icons.DELETE}" id="btnHostListDelete" label="Clear List" click="model.clearHostList()" enabled="{model.appModel.hasHostList}"/>
						<mx:Spacer width="100%"/>
						<mx:Button icon="{Icons.SERVER_GO}" id="btnStartLoop" label="Start" enabled="{model.appModel.hasHostList}" />
						<mx:Button icon="{Icons.STOP}" id="btnStopLoop" label="Stop" enabled="{model.appModel.hasHostList}" />
					</s:HGroup>
					<mx:DataGrid id="dgHost" dataProvider="{model.appModel.hostList}" width="100%" height="100%">
						<mx:columns>
							<mx:DataGridColumn dataField="no" headerText="No" width="40" />
							<mx:DataGridColumn dataField="ip" headerText="ip" width="100" />
							<mx:DataGridColumn dataField="hostName" headerText="hostName" width="170" />
							<mx:DataGridColumn dataField="onLine" headerText="onLine" width="80"/>
							<mx:DataGridColumn labelFunction="userCountFunc" headerText="user count" width="80" />
							<mx:DataGridColumn dataField="isDefault" headerText="Stanard" itemRenderer="com.asokorea.view.StandardItemRenderer"/>
						</mx:columns>
					</mx:DataGrid>
				</s:NavigatorContent>
			</mx:TabNavigator>	
			<mx:VDividedBox width="50%" height="100%">
				<s:VGroup width="100%" height="75%">
					<s:HGroup width="100%">
						<!--<s:Label id="lblName" fontSize="18" fontWeight="bold" text="Test task"/>-->
						<mx:Spacer width="100%"/>
						<mx:CheckBox id="chkFixSameLine" change="onChange(event)" selected="true" />
						<mx:LinkButton textAlign="right" icon="{Icons.WRENCH}" label="Settings" enabled="false"/>
						<mx:LinkButton textAlign="right" icon="{Icons.HELP}" label="Help" enabled="false"/>
						<mx:LinkButton id="btnClose"  textAlign="right" icon="{Icons.CANCEL}" label="Close Connection" enabled="false"/>
					</s:HGroup>
					<mx:DataGrid id="dgUser" dataProvider="{HostVo(dgHost.selectedItem).userList}" width="100%" height="100%">
						<mx:columns>
							<mx:DataGridColumn dataField="no" headerText="No" width="40" />
							<mx:DataGridColumn dataField="userName" headerText="UserName" width="100" />
							<mx:DataGridColumn dataField="privilege" headerText="Privilege" width="100" />
							<mx:DataGridColumn dataField="secret" headerText="Secret" width="100"/>
							<mx:DataGridColumn dataField="hash" headerText="Hash" />
						</mx:columns>
					</mx:DataGrid>
				</s:VGroup>
				<panels:TerminalPanel width="100%" height="50%" />
			</mx:VDividedBox>
		</mx:HDividedBox>
	</s:BorderContainer>
	
	<!--main view-->
	<s:BorderContainer includeIn="BUSY" top="90" bottom="90" left="160" right="160"
					   borderAlpha=".7" backgroundAlpha=".7" borderWeight="10" cornerRadius="16"
					   verticalCenter="0" horizontalCenter="0">
		<util:Spinner size="48" verticalCenter="0" horizontalCenter="0" tickColor="#66AAFF" numTicks="18" fadeSpeed="1000" speed="1200"/>
	</s:BorderContainer>
	<!--main view-->
	
</s:Group>
